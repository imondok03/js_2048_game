{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.status = Game.gameStatus.idle;\n        this.score = 0;\n        this.initialState = initialState;\n        this.state = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n        });\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                if (this.getStatus() !== Game.gameStatus.playing) return;\n                var movesAVLBL = false;\n                var newState = this.state.map(function(row) {\n                    var filteredRow = row.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    var newRow = [];\n                    for(var i = 0; i < filteredRow.length; i++)if (filteredRow[i] === filteredRow[i + 1]) {\n                        var mergedValue = filteredRow[i] * 2;\n                        newRow.push(mergedValue);\n                        _this.score += mergedValue;\n                        i++;\n                        movesAVLBL = true;\n                    } else newRow.push(filteredRow[i]);\n                    while(newRow.length < row.length)newRow.push(0);\n                    if (!movesAVLBL && !row.every(function(cell, index) {\n                        return cell === newRow[index];\n                    })) movesAVLBL = true;\n                    return newRow;\n                });\n                if (movesAVLBL) {\n                    this.state = newState;\n                    this.addCell();\n                    this.setState();\n                    this.checkStatus();\n                }\n                return movesAVLBL;\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                if (this.getStatus() !== Game.gameStatus.playing) return;\n                var movesAVLBL = false;\n                var newState = this.state.map(function(row) {\n                    var filteredRow = row.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    var newRow = [];\n                    for(var i = filteredRow.length - 1; i >= 0; i--)if (filteredRow[i] === filteredRow[i - 1]) {\n                        var mergedValue = filteredRow[i] * 2;\n                        newRow.unshift(mergedValue);\n                        _this.score += mergedValue;\n                        i--;\n                        movesAVLBL = true;\n                    } else newRow.unshift(filteredRow[i]);\n                    while(newRow.length < row.length)newRow.unshift(0);\n                    if (!movesAVLBL && !row.every(function(cell, index) {\n                        return cell === newRow[index];\n                    })) movesAVLBL = true;\n                    return newRow;\n                });\n                if (movesAVLBL) {\n                    this.state = newState;\n                    this.addCell();\n                    this.setState();\n                    this.checkStatus();\n                }\n                return movesAVLBL;\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                if (this.getStatus() !== Game.gameStatus.playing) return;\n                var movesAVLBL = false;\n                var newState = this.state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n                for(var c = 0; c < this.state[0].length; c++){\n                    var filteredColumn = [];\n                    for(var r = 0; r < this.state.length; r++)if (this.state[r][c] !== 0) filteredColumn.push(this.state[r][c]);\n                    var newColumn = [];\n                    for(var i = 0; i < filteredColumn.length; i++)if (filteredColumn[i] === filteredColumn[i + 1]) {\n                        var mergedValue = filteredColumn[i] * 2;\n                        newColumn.push(mergedValue);\n                        this.score += mergedValue;\n                        i++;\n                        movesAVLBL = true;\n                    } else newColumn.push(filteredColumn[i]);\n                    while(newColumn.length < this.state.length)newColumn.push(0);\n                    for(var r1 = 0; r1 < this.state.length; r1++)if (newState[r1][c] !== newColumn[r1]) {\n                        newState[r1][c] = newColumn[r1];\n                        movesAVLBL = true;\n                    }\n                }\n                if (movesAVLBL) {\n                    this.state = newState;\n                    this.addCell();\n                    this.setState();\n                    this.checkStatus();\n                }\n                return movesAVLBL;\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                if (this.getStatus() !== Game.gameStatus.playing) return;\n                var movesAVLBL = false;\n                var newState = this.state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n                for(var c = 0; c < this.state[0].length; c++){\n                    var filteredColumn = [];\n                    for(var r = this.state.length - 1; r >= 0; r--)if (this.state[r][c] !== 0) filteredColumn.push(this.state[r][c]);\n                    var newColumn = [];\n                    for(var i = 0; i < filteredColumn.length; i++)if (filteredColumn[i] === filteredColumn[i + 1]) {\n                        var mergedValue = filteredColumn[i] * 2;\n                        newColumn.unshift(mergedValue);\n                        this.score += mergedValue;\n                        i++;\n                        movesAVLBL = true;\n                    } else newColumn.unshift(filteredColumn[i]);\n                    while(newColumn.length < this.state.length)newColumn.unshift(0);\n                    for(var r1 = 0; r1 < this.state.length; r1++)if (newState[r1][c] !== newColumn[r1]) {\n                        newState[r1][c] = newColumn[r1];\n                        movesAVLBL = true;\n                    }\n                }\n                if (movesAVLBL) {\n                    this.state = newState;\n                    this.addCell();\n                    this.setState();\n                    this.checkStatus();\n                }\n                return movesAVLBL;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = Game.gameStatus.playing;\n                this.state = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n                this.addCell();\n                this.addCell();\n                this.setState();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.score = 0;\n                this.status = Game.gameStatus.idle;\n                this.state = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n                this.setState();\n            }\n        },\n        {\n            key: \"addCell\",\n            value: function addCell() {\n                var emptyCells = [];\n                for(var i = 0; i < this.state.length; i++){\n                    for(var j = 0; j < this.state[i].length; j++)if (this.state[i][j] === 0) emptyCells.push({\n                        r: i,\n                        c: j\n                    });\n                }\n                if (emptyCells.length === 0) return;\n                var randomIndex = this.addRandomNumber(emptyCells.length);\n                var _emptyCells_randomIndex = emptyCells[randomIndex], r = _emptyCells_randomIndex.r, c = _emptyCells_randomIndex.c;\n                var newState = this.state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n                newState[r][c] = this.getRandomCell();\n                this.state = newState;\n            }\n        },\n        {\n            key: \"setState\",\n            value: function setState() {\n                var cells = document.querySelectorAll(\".field-cell\");\n                var stateValues = this.state.flat();\n                if (cells.length === 0) return;\n                for(var i = 0; i < stateValues.length; i++){\n                    var currentCell = cells[i];\n                    var currentValue = stateValues[i];\n                    if (!currentCell) continue;\n                    currentCell.className = \"field-cell\";\n                    if (currentValue > 0) {\n                        currentCell.textContent = currentValue;\n                        currentCell.classList.add(\"field-cell--\".concat(currentValue));\n                    } else currentCell.textContent = \"\";\n                }\n            }\n        },\n        {\n            key: \"addRandomNumber\",\n            value: function addRandomNumber(max) {\n                return Math.floor(Math.random() * max);\n            }\n        },\n        {\n            key: \"getRandomCell\",\n            value: function getRandomCell() {\n                return Math.random() < 0.9 ? 2 : 4;\n            }\n        },\n        {\n            key: \"checkStatus\",\n            value: function checkStatus() {\n                var movesAVLBL = false;\n                var canMerge = false;\n                var size = this.state.length;\n                for(var i = 0; i < size; i++)if (this.state[i].includes(2048)) {\n                    this.status = Game.gameStatus.win;\n                    return;\n                }\n                for(var i1 = 0; i1 < size; i1++){\n                    for(var j = 0; j < size; j++){\n                        if (this.state[i1][j] === 0) movesAVLBL = true;\n                        if (j < size - 1 && this.state[i1][j] === this.state[i1][j + 1]) canMerge = true;\n                        if (i1 < size - 1 && this.state[i1][j] === this.state[i1 + 1][j]) canMerge = true;\n                        if (movesAVLBL || canMerge) break;\n                    }\n                    if (movesAVLBL || canMerge) break;\n                }\n                if (!movesAVLBL && !canMerge) this.status = Game.gameStatus.lose;\n            }\n        }\n    ]);\n    return Game;\n}();\n(0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)($3d28d7f1aac198f5$var$Game, \"gameStatus\", {\n    idle: \"idle\",\n    playing: \"playing\",\n    win: \"win\",\n    lose: \"lose\"\n});\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\n\"use strict\";\nvar $197cd56b15c33885$var$game = new (0, (/*@__PURE__*/$parcel$interopDefault($3d28d7f1aac198f5$exports)))();\nvar $197cd56b15c33885$var$startButton = document.querySelector(\".start\");\nvar $197cd56b15c33885$var$startMessage = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$loseMessage = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$winMessage = document.querySelectorAll(\".message-win\");\nvar $197cd56b15c33885$var$gameScore = document.querySelector(\".game-score\");\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$startButton.classList.contains(\"start\")) {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$startButton.classList = \"button restart\";\n        $197cd56b15c33885$var$startButton.innerHTML = \"Restart\";\n        $197cd56b15c33885$var$startMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$loseMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$winMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$getScore();\n    } else if ($197cd56b15c33885$var$startButton.classList.contains(\"restart\")) {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$startButton.classList = \"button start\";\n        $197cd56b15c33885$var$startButton.innerHTML = \"Start\";\n        $197cd56b15c33885$var$startMessage.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$loseMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$winMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$getScore();\n    }\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    switch(e.key){\n        case \"ArrowUp\":\n        case \"w\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n        case \"s\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        case \"ArrowLeft\":\n        case \"a\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n        case \"d\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n    }\n    $197cd56b15c33885$var$getScore();\n    $197cd56b15c33885$var$updateMessages();\n});\nfunction $197cd56b15c33885$var$updateMessages() {\n    if ($197cd56b15c33885$var$game.getStatus() === (0, (/*@__PURE__*/$parcel$interopDefault($3d28d7f1aac198f5$exports))).gameStatus.lose) $197cd56b15c33885$var$loseMessage.classList.remove(\"hidden\");\n    else if ($197cd56b15c33885$var$game.getStatus() === (0, (/*@__PURE__*/$parcel$interopDefault($3d28d7f1aac198f5$exports))).gameStatus.win) $197cd56b15c33885$var$winMessage.classList.remove(\"hidden\");\n}\nfunction $197cd56b15c33885$var$getScore() {\n    $197cd56b15c33885$var$gameScore.textContent = $197cd56b15c33885$var$game.getScore();\n}\n\n})();\n//# sourceMappingURL=index.c778942e.js.map\n","'use strict';\n\nimport Game from '../modules/Game.class';\n\nconst game = new Game();\n\nconst startButton = document.querySelector('.start');\nconst startMessage = document.querySelector('.message-start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelectorAll('.message-win');\nconst gameScore = document.querySelector('.game-score');\n\nstartButton.addEventListener('click', () => {\n  if (startButton.classList.contains('start')) {\n    game.start();\n    startButton.classList = 'button restart';\n    startButton.innerHTML = 'Restart';\n    startMessage.classList.add('hidden');\n    loseMessage.classList.add('hidden');\n    winMessage.classList.add('hidden');\n\n    getScore();\n  } else if (startButton.classList.contains('restart')) {\n    game.restart();\n    startButton.classList = 'button start';\n    startButton.innerHTML = 'Start';\n    startMessage.classList.remove('hidden');\n    loseMessage.classList.add('hidden');\n    winMessage.classList.add('hidden');\n\n    getScore();\n  }\n});\n\ndocument.addEventListener('keydown', (e) => {\n  switch (e.key) {\n    case 'ArrowUp':\n    case 'w':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n    case 's':\n      game.moveDown();\n      break;\n    case 'ArrowLeft':\n    case 'a':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n    case 'd':\n      game.moveRight();\n      break;\n  }\n\n  getScore();\n  updateMessages();\n});\n\nfunction updateMessages() {\n  if (game.getStatus() === Game.gameStatus.lose) {\n    loseMessage.classList.remove('hidden');\n  } else if (game.getStatus() === Game.gameStatus.win) {\n    winMessage.classList.remove('hidden');\n  }\n}\n\nfunction getScore() {\n  gameScore.textContent = game.getScore();\n}\n","'use strict';\n\nclass Game {\n  static gameStatus = {\n    idle: 'idle',\n    playing: 'playing',\n    win: 'win',\n    lose: 'lose',\n  };\n\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.status = Game.gameStatus.idle;\n    this.score = 0;\n    this.initialState = initialState;\n    this.state = initialState.map((row) => [...row]);\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  moveLeft() {\n    if (this.getStatus() !== Game.gameStatus.playing) {\n      return;\n    }\n\n    let movesAVLBL = false;\n    const newState = this.state.map((row) => {\n      const filteredRow = row.filter((cell) => cell !== 0);\n      const newRow = [];\n\n      for (let i = 0; i < filteredRow.length; i++) {\n        if (filteredRow[i] === filteredRow[i + 1]) {\n          const mergedValue = filteredRow[i] * 2;\n\n          newRow.push(mergedValue);\n          this.score += mergedValue;\n          i++;\n          movesAVLBL = true;\n        } else {\n          newRow.push(filteredRow[i]);\n        }\n      }\n\n      while (newRow.length < row.length) {\n        newRow.push(0);\n      }\n\n      if (!movesAVLBL && !row.every((cell, index) => cell === newRow[index])) {\n        movesAVLBL = true;\n      }\n\n      return newRow;\n    });\n\n    if (movesAVLBL) {\n      this.state = newState;\n      this.addCell();\n      this.setState();\n      this.checkStatus();\n    }\n\n    return movesAVLBL;\n  }\n\n  moveRight() {\n    if (this.getStatus() !== Game.gameStatus.playing) {\n      return;\n    }\n\n    let movesAVLBL = false;\n    const newState = this.state.map((row) => {\n      const filteredRow = row.filter((cell) => cell !== 0);\n      const newRow = [];\n\n      for (let i = filteredRow.length - 1; i >= 0; i--) {\n        if (filteredRow[i] === filteredRow[i - 1]) {\n          const mergedValue = filteredRow[i] * 2;\n\n          newRow.unshift(mergedValue);\n          this.score += mergedValue;\n          i--;\n          movesAVLBL = true;\n        } else {\n          newRow.unshift(filteredRow[i]);\n        }\n      }\n\n      while (newRow.length < row.length) {\n        newRow.unshift(0);\n      }\n\n      if (!movesAVLBL && !row.every((cell, index) => cell === newRow[index])) {\n        movesAVLBL = true;\n      }\n\n      return newRow;\n    });\n\n    if (movesAVLBL) {\n      this.state = newState;\n      this.addCell();\n      this.setState();\n      this.checkStatus();\n    }\n\n    return movesAVLBL;\n  }\n\n  moveUp() {\n    if (this.getStatus() !== Game.gameStatus.playing) {\n      return;\n    }\n\n    let movesAVLBL = false;\n    const newState = this.state.map((row) => [...row]);\n\n    for (let c = 0; c < this.state[0].length; c++) {\n      const filteredColumn = [];\n\n      for (let r = 0; r < this.state.length; r++) {\n        if (this.state[r][c] !== 0) {\n          filteredColumn.push(this.state[r][c]);\n        }\n      }\n\n      const newColumn = [];\n\n      for (let i = 0; i < filteredColumn.length; i++) {\n        if (filteredColumn[i] === filteredColumn[i + 1]) {\n          const mergedValue = filteredColumn[i] * 2;\n\n          newColumn.push(mergedValue);\n          this.score += mergedValue;\n          i++;\n          movesAVLBL = true;\n        } else {\n          newColumn.push(filteredColumn[i]);\n        }\n      }\n\n      while (newColumn.length < this.state.length) {\n        newColumn.push(0);\n      }\n\n      for (let r = 0; r < this.state.length; r++) {\n        if (newState[r][c] !== newColumn[r]) {\n          newState[r][c] = newColumn[r];\n          movesAVLBL = true;\n        }\n      }\n    }\n\n    if (movesAVLBL) {\n      this.state = newState;\n      this.addCell();\n      this.setState();\n      this.checkStatus();\n    }\n\n    return movesAVLBL;\n  }\n\n  moveDown() {\n    if (this.getStatus() !== Game.gameStatus.playing) {\n      return;\n    }\n\n    let movesAVLBL = false;\n    const newState = this.state.map((row) => [...row]);\n\n    for (let c = 0; c < this.state[0].length; c++) {\n      const filteredColumn = [];\n\n      for (let r = this.state.length - 1; r >= 0; r--) {\n        if (this.state[r][c] !== 0) {\n          filteredColumn.push(this.state[r][c]);\n        }\n      }\n\n      const newColumn = [];\n\n      for (let i = 0; i < filteredColumn.length; i++) {\n        if (filteredColumn[i] === filteredColumn[i + 1]) {\n          const mergedValue = filteredColumn[i] * 2;\n\n          newColumn.unshift(mergedValue);\n          this.score += mergedValue;\n          i++;\n          movesAVLBL = true;\n        } else {\n          newColumn.unshift(filteredColumn[i]);\n        }\n      }\n\n      while (newColumn.length < this.state.length) {\n        newColumn.unshift(0);\n      }\n\n      for (let r = 0; r < this.state.length; r++) {\n        if (newState[r][c] !== newColumn[r]) {\n          newState[r][c] = newColumn[r];\n          movesAVLBL = true;\n        }\n      }\n    }\n\n    if (movesAVLBL) {\n      this.state = newState;\n      this.addCell();\n      this.setState();\n      this.checkStatus();\n    }\n\n    return movesAVLBL;\n  }\n\n  start() {\n    this.status = Game.gameStatus.playing;\n    this.state = this.initialState.map((row) => [...row]);\n    this.addCell();\n    this.addCell();\n    this.setState();\n  }\n\n  restart() {\n    this.score = 0;\n    this.status = Game.gameStatus.idle;\n    this.state = this.initialState.map((row) => [...row]);\n    this.setState();\n  }\n\n  addCell() {\n    const emptyCells = [];\n\n    for (let i = 0; i < this.state.length; i++) {\n      for (let j = 0; j < this.state[i].length; j++) {\n        if (this.state[i][j] === 0) {\n          emptyCells.push({ r: i, c: j });\n        }\n      }\n    }\n\n    if (emptyCells.length === 0) {\n      return;\n    }\n\n    const randomIndex = this.addRandomNumber(emptyCells.length);\n    const { r, c } = emptyCells[randomIndex];\n    const newState = this.state.map((row) => [...row]);\n\n    newState[r][c] = this.getRandomCell();\n    this.state = newState;\n  }\n\n  setState() {\n    const cells = document.querySelectorAll('.field-cell');\n    const stateValues = this.state.flat();\n\n    if (cells.length === 0) {\n      return;\n    }\n\n    for (let i = 0; i < stateValues.length; i++) {\n      const currentCell = cells[i];\n      const currentValue = stateValues[i];\n\n      if (!currentCell) {\n        continue;\n      }\n\n      currentCell.className = 'field-cell';\n\n      if (currentValue > 0) {\n        currentCell.textContent = currentValue;\n        currentCell.classList.add(`field-cell--${currentValue}`);\n      } else {\n        currentCell.textContent = '';\n      }\n    }\n  }\n\n  addRandomNumber(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n  getRandomCell() {\n    return Math.random() < 0.9 ? 2 : 4;\n  }\n\n  checkStatus() {\n    let movesAVLBL = false;\n    let canMerge = false;\n\n    const size = this.state.length;\n\n    for (let i = 0; i < size; i++) {\n      if (this.state[i].includes(2048)) {\n        this.status = Game.gameStatus.win;\n\n        return;\n      }\n    }\n\n    for (let i = 0; i < size; i++) {\n      for (let j = 0; j < size; j++) {\n        if (this.state[i][j] === 0) {\n          movesAVLBL = true;\n        }\n\n        if (j < size - 1 && this.state[i][j] === this.state[i][j + 1]) {\n          canMerge = true;\n        }\n\n        if (i < size - 1 && this.state[i][j] === this.state[i + 1][j]) {\n          canMerge = true;\n        }\n\n        if (movesAVLBL || canMerge) {\n          break;\n        }\n      }\n\n      if (movesAVLBL || canMerge) {\n        break;\n      }\n    }\n\n    if (!movesAVLBL && !canMerge) {\n      this.status = Game.gameStatus.lose;\n    }\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","export function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$parcel$interopDefault","a","__esModule","default","key","value","$3d28d7f1aac198f5$exports","$c3b10a83b523f372$export$79e617b1955a2616","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$3d28d7f1aac198f5$var$Game","protoProps","Game","initialState","arguments","instance","Constructor","status","gameStatus","idle","score","state","map","row","_this","getStatus","playing","movesAVLBL","newState","filteredRow","filter","cell","newRow","mergedValue","push","every","index","addCell","setState","checkStatus","unshift","c","filteredColumn","r","newColumn","r1","emptyCells","j","randomIndex","addRandomNumber","_emptyCells_randomIndex","getRandomCell","cells","document","querySelectorAll","stateValues","flat","currentCell","currentValue","className","textContent","classList","add","concat","max","Math","floor","random","canMerge","size","includes","win","i1","lose","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","obj","$197cd56b15c33885$var$game","$197cd56b15c33885$var$startButton","querySelector","$197cd56b15c33885$var$startMessage","$197cd56b15c33885$var$loseMessage","$197cd56b15c33885$var$winMessage","$197cd56b15c33885$var$gameScore","$197cd56b15c33885$var$getScore","getScore","addEventListener","contains","start","innerHTML","restart","remove","e","moveUp","moveDown","moveLeft","moveRight"],"version":3,"file":"index.c778942e.js.map"}